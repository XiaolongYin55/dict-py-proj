name: Auto Deploy to Ubuntu

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
    - name: Pull Latest Code
      run: |
        cd /home/parallels/myDict
        git stash
        git reset --hard HEAD
        git pull origin main
        echo "✅ 代码更新完成"
        
    - name: Clean Environment
      run: |
        cd /home/parallels/myDict
        docker-compose down --volumes --remove-orphans 2>/dev/null || true
        docker system prune -f
        echo "✅ 环境清理完成"
        
    - name: Rebuild Services
      run: |
        cd /home/parallels/myDict
        docker-compose build --no-cache
        echo "✅ 服务重建完成"
        
    - name: Start Database
      run: |
        cd /home/parallels/myDict
        docker-compose up -d db
        echo "⏳ 等待数据库完全启动（60秒）..."
        sleep 60
        echo "✅ 数据库启动完成"
        
    - name: Run Database Migrations
      run: |
        cd /home/parallels/myDict
        echo "🔧 运行数据库迁移..."
        docker-compose run --rm web python manage.py migrate
        echo "✅ 迁移完成"
        
    - name: Start Web Service
      run: |
        cd /home/parallels/myDict
        docker-compose up -d web
        echo "✅ Web服务启动完成"
        
    - name: Health Check
      run: |
        cd /home/parallels/myDict
        echo "🔍 健康检查..."
        
        # 等待应用启动
        sleep 30
        
        # 检查服务状态
        docker-compose ps
        
        # 健康检查
        timeout=30
        for i in $(seq 1 6); do
          if curl -f http://localhost:8000/api/users/ &>/dev/null; then
            echo "✅ 应用健康检查通过"
            break
          fi
          echo "⏱️  等待应用启动... ($i/6)"
          sleep 5
        done
        
        echo "🎉 部署成功完成!"
        echo "🌐 访问地址: http://10.211.55.9:8000/api/users/"
