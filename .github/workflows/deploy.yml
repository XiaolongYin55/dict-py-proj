name: Auto Deploy to Ubuntu

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
    - name: Pull Latest Code
      run: |
        cd /home/parallels/myDict
        git stash
        git reset --hard HEAD
        git pull origin main
        echo "✅ 代码更新完成"
        
    - name: Stop Services
      run: |
        cd /home/parallels/myDict
        docker-compose down
        echo "✅ 服务已停止"
        
    - name: Rebuild Services
      run: |
        cd /home/parallels/myDict
        docker system prune -f
        docker-compose build --no-cache
        echo "✅ 服务重建完成"
        
    - name: Start All Services
      run: |
        cd /home/parallels/myDict
        docker-compose up -d
        echo "✅ 所有服务启动完成"
        
    - name: Check Migration Status
      run: |
        cd /home/parallels/myDict
        echo "🔍 检查迁移状态..."
        
        # 等待应用启动
        sleep 10
        
        # 检查迁移状态，但不失败
        docker-compose exec web python manage.py showmigrations || echo "⚠️ 无法检查迁移状态"
        
        # 尝试运行迁移（如果失败也不阻止部署）
        docker-compose exec web python manage.py migrate || echo "⚠️ 迁移失败，但继续部署"
        
    - name: Verify Deployment
      run: |
        cd /home/parallels/myDict
        echo "🔍 验证部署..."
        
        # 检查容器状态
        docker-compose ps
        
        # 健康检查
        timeout=30
        for i in $(seq 1 6); do
          if curl -f http://localhost:8000/api/users/ &>/dev/null; then
            echo "✅ 应用健康检查通过"
            break
          fi
          echo "⏱️  等待应用启动... ($i/6)"
          sleep 5
        done
        
        echo "🎉 部署完成!"
        echo "🌐 访问地址: http://10.211.55.9:8000"
