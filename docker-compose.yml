version: '3.8'

services:
  web:
    build: .
    container_name: dict-py-proj-web
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.docker
    volumes:
      - .:/app
    command: >
      sh -c "sleep 10 && 
             python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - dict-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  db:
    image: mysql:8.0
    container_name: dict-py-proj-db
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: myDict
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - mydict_db_data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p12345678"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dict-network
    command: --default-authentication-plugin=mysql_native_password
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  mydict_db_data:
    driver: local
    driver_opts:
      type: local

networks:
  dict-network:
    driver: bridge
